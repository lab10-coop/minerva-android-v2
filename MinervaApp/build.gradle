apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply from: "$rootProject.projectDir/dependencies.gradle"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 29
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "MARKETS_API_URL", '"https://api.coingecko.com/api/v3/"'
        buildConfigField "String", "LICENCE_TYPE", '"GPLv3"'
        buildConfigField "String", "TWITTER_APP", '"twitter://user?screen_name=MinervaWallet"'
        buildConfigField "String", "TWITTER_WEB", '"https://twitter.com/MinervaWallet"'
        buildConfigField "String", "TELEGRAM_APP", '"tg://resolve?domain=MinervaWallet"'
        buildConfigField "String", "TELEGRAM_WEB", '"https://web.telegram.org/#/im?p=@MinervaWallet"'
        buildConfigField "String", "PRIVACY_POLICY", '"https://docs.minerva.digital/legal/privacy"'
        buildConfigField "String", "TERMS_OF_SERVICE", '"https://docs.minerva.digital/legal/terms"'
        buildConfigField "String", "RAMP_API_KEY", System.env.RAMP_API_KEY ?: localProperty("ramp.api.key")
    }

    signingConfigs {
        release {
            keyAlias String.valueOf(System.env.KEY_ALIAS)
            keyPassword String.valueOf(System.env.KEY_PASSWORD)
            storePassword String.valueOf(System.env.KEY_STORE_PASSWORD)
            storeFile file('keyStoreMinerva.jks')
        }
    }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions 'enviroment'
    productFlavors {
        flavorDimensions 'enviroment'
        staging {
            applicationId "minerva.android.staging"
            versionCode 41
            versionName "1.3.1"
            dimension 'enviroment'
            versionNameSuffix '-staging'
            matchingFallbacks = ["staging"]

            buildConfigField "String", "REST_API_URL", '"http://minerva-api.dev.lab10.io/"'
            buildConfigField "String", "RAMP_API_URL", '"ri-widget-staging.firebaseapp.com"'
            buildConfigField "String", "API_TOKEN", '"dummyToken"'
        }

        production {
            applicationId "digital.minerva"
            versionCode 4
            versionName "1.3.1"
            dimension 'enviroment'
            versionNameSuffix '-release'
            matchingFallbacks = ["production"]

            buildConfigField "String", "REST_API_URL", '"https://api.minerva.digital"'
            buildConfigField "String", "RAMP_API_URL", '"buy.ramp.network"'
            buildConfigField "String", "API_TOKEN", String.valueOf(System.env.REST_API_TOKEN) ?: localProperty("rest.api.token")
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/spring.schemas'
        exclude 'META-INF/spring.tooling'
        exclude 'META-INF/spring.handlers'
        exclude("META-INF/*.kotlin_module")
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation platform('com.google.firebase:firebase-bom:25.12.0')
    implementation project(':WalletManager')
    implementation project(':KotlinUtils')
    implementation project(':UiExtension')

    implementation('com.github.CookieStudio:abidecoder:1.0.4') {
        exclude group: 'org.iq80.leveldb', module: 'leveldb-api'
    }

    implementation firebaseDepenedencies.values()
    implementation crashlyticsDependencies.values()
    implementation qrDependency.values()
    implementation uiDependencies.values()
    implementation startupDependencies.values()

    implementation coreDependencies.values()
    implementation androidCoreDependencies.values()
    implementation koinDependencies.values()
    implementation rxDependencies.values()
    implementation kotlinReflect.values()
    implementation jsoup.values()

    testImplementation testDependencies.values()
}
