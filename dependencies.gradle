ext {
    kotlinVersion = '1.3.72'

    constraintVersion = '2.0.0-beta4'
    timberVersion = '4.7.1'
    annotationVersion = '1.1.0'

    androidxCoreVersion = '1.2.0-alpha02'
    androidxFragmentVersion = '1.3.0-alpha02'
    materialDesignVersion = '1.2.0-alpha05'
    swipeRefreshVersion = '1.0.0'

    rxAndroidVersion = '2.1.1'
    rxJavaVersion = '2.2.19'
    rxKotlinVersion = '2.4.0'
    rxRelayVersion = '2.1.1'

    ktxCoreVersion = '1.1.0-alpha04'
    ktxFragmentVersion = '1.0.0'

    retrofitVersion = '2.8.1'
    logginInterceptorVersion = '4.5.0'

    koinVersion = '2.1.5'
    gsonVersion = '2.8.6'

    junitVersion = '4.13'
    mockitoVersion = '2.1.0'
    mockWebServerVersion = '2.7.5'
    junitKotlinVersion = '1.3.21'
    junitAndroidx = '1.1.1'
    mockkVersion = '1.9.3'
    kluentVersion = '1.60'
    androidxCoreTestingVersion = '2.0.1'

    didJwtVersion = "0.4.0"
    kethereum_version = "0.81.4"

    crashlyticsVersion = '2.10.1'
    scannerVersion = '2.1.0'
    coroutinesVersion = '1.3.7'
    viewModelScopeVersion = '2.3.0-alpha01'
    qrGeneratorVersion = '2.6.0'

    glideVersion = '4.11.0'
    jodaVersion = '2.10.5'
    waitingDotsVersion = '0.6.1'
    glideToVector = 'v2.0.0'

    w3jVersion = '4.6.0-android'
    rxbindingVersion = '3.1.0'

    spannableStringVersion = '1.1.0'
    biometricVersion = '1.0.1'
    cloudMassagingVersion = '20.1.6'

    startupVersion = '1.0.0-alpha01'

    jsoupVersion = '1.13.1'
    jsonLogicVersion = '0.9.6'
    flexboxVersion = '2.0.1'
    cookieFlashbarVersion = '1.0.2'
    mockitoInline = '3.4.0'

    rxbinding = [
            rxbinding    : "com.jakewharton.rxbinding3:rxbinding:$rxbindingVersion",
            rxbindingCore: "com.jakewharton.rxbinding3:rxbinding-core:$rxbindingVersion"
    ]

    coreDependencies = [
            kotlin    : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion",
            timber    : "com.jakewharton.timber:timber:$timberVersion",
            annotation: "androidx.annotation:annotation:$annotationVersion",
            gson      : "com.google.code.gson:gson:$gsonVersion",
            jodatime  : "joda-time:joda-time:$jodaVersion"
    ]

    koinDependencies = [
            koinCore     : "org.koin:koin-android:$koinVersion",
            koinViewModel: "org.koin:koin-androidx-viewmodel:$koinVersion"
    ]

    androidCoreDependencies = [
            core        : "androidx.core:core-ktx:$androidxCoreVersion",
            fragment    : "androidx.fragment:fragment-ktx:$androidxFragmentVersion",
            constraint  : "androidx.constraintlayout:constraintlayout:$constraintVersion",
            material    : "com.google.android.material:material:$materialDesignVersion",
            swipeRefresh: "androidx.swiperefreshlayout:swiperefreshlayout:$swipeRefreshVersion"
    ]

    rxDependencies = [
            rxAndroid: "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion",
            rxJava   : "io.reactivex.rxjava2:rxjava:$rxJavaVersion",
            rxkotlin : "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion",
            rxRelay  : "com.jakewharton.rxrelay2:rxrelay:$rxRelayVersion"
    ]

    coroutinesDependencies = [
            coroutinesRx2: "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$coroutinesVersion"
    ]

    retrofitDependencies = [
            retrofit         : "com.squareup.retrofit2:retrofit:$retrofitVersion",
            gsonConverter    : "com.squareup.retrofit2:converter-gson:$retrofitVersion",
            rxRetrofit       : "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion",
            logginInterceptor: "com.squareup.okhttp3:logging-interceptor:$logginInterceptorVersion"
    ]

    testDependencies = [
            junit        : "junit:junit:$junitVersion",
            junitAndroidx: "androidx.test.ext:junit:$junitAndroidx",
            mockito      : "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoVersion",
            mockwebserver: "com.squareup.okhttp:mockwebserver:$mockWebServerVersion",
            kotlin       : "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion",
            kotlinTest   : "org.jetbrains.kotlin:kotlin-test-junit:$junitKotlinVersion",
            koinTest     : "org.koin:koin-test:$koinVersion",
            mockk        : "io.mockk:mockk:$mockkVersion",
            kluent       : "org.amshove.kluent:kluent-android:$kluentVersion",
            androidxCore : "androidx.arch.core:core-testing:$androidxCoreTestingVersion",
            mockitoInline: "org.mockito:mockito-inline:$mockitoInline"
    ]

    cryptographyDependencies = [
            khetereum        : "com.github.komputing.kethereum:bip39:$kethereum_version",
            khetereumWordList: "com.github.komputing.kethereum:bip39_wordlist_en:$kethereum_version",
            bip32            : "com.github.komputing.kethereum:bip32:$kethereum_version",
            kotlinDidJwt     : "com.github.uport-project.kotlin-did-jwt:jwt:$didJwtVersion"
    ]

    qrDependency = [
            scanner    : "com.budiyev.android:code-scanner:$scannerVersion",
            qrGenerator: "com.github.kenglxn.QRGen:android:$qrGeneratorVersion"
    ]

    crashlyticsDependencies = [
            crashlytics: "com.crashlytics.sdk.android:crashlytics:$crashlyticsVersion"
    ]

    uiDependencies = [
            glide          : "com.github.bumptech.glide:glide:$glideVersion",
            flashbar       : "com.andrognito.flashbar:CookieFlashbar:$cookieFlashbarVersion",
            spannableString: "com.github.hitanshu-dhawan:SpannableStringParser:$spannableStringVersion",
            biometric      : "androidx.biometric:biometric:$biometricVersion",
            waitingDots    : "com.github.tajchert:WaitingDots:$waitingDotsVersion",
            glidetoVector  : "com.github.corouteam:GlideToVectorYou:$glideToVector",
            flexbox        : "com.google.android:flexbox:$flexboxVersion"
    ]

    blockChainDependencies = [
            w3jCore    : "org.web3j:core:$w3jVersion",
            w3jContract: "org.web3j:contracts:$w3jVersion"
    ]

    firebaseDepenedencies = [
            cloudMassaging: "com.google.firebase:firebase-messaging:$cloudMassagingVersion",
            crashlytics   : "com.google.firebase:firebase-crashlytics",
            analytics     : "com.google.firebase:firebase-analytics"
    ]

    kotson = [
            kotson: "com.github.salomonbrys.kotson:kotson:2.5.0"
    ]

    startupDependencies = [startup: "androidx.startup:startup-runtime:$startupVersion"]
    kotlinReflect = [kotlinReflect: "org.jetbrains.kotlin:kotlin-reflect"]
    jsoup = [jsoup: "org.jsoup:jsoup:$jsoupVersion"]
    jsonLogicDependencies = [jsonLogic: "eu.afse:eu.afse.jsonlogic:$jsonLogicVersion"]
}